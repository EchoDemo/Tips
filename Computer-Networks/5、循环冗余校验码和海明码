1、循环冗余校验码：


A cyclic redundancy check (CRC) is an error-detecting code commonly used in digital networks and storage devices to detect accidental 

changes to raw data. Blocks of data entering these systems get a short check value attached, based on the remainder of a polynomial division 

of their contents. On retrieval, the calculation is repeated and, in the event the check values do not match, corrective action can be taken 

against data corruption.



循环冗余校验CRC简介：

（1）CRC为校验和的一种，是两个字节数据流采用二进制除法（没有借位和进位，使用异或来代替减法）相除所得到的余数。


（2）其中被除数是需要计算校验和的信息数据流的二进制表示；除数是一个长度为(n+1)的预定义二进制数，通常用多项式的系数来表示。


（3）在做除法之前，要在信息数据之后先加上n个0。冗余码的位数是n位。冗余码的计算方法是，先将信息码后面补0，补0的个数是生成多项式最高次幂；将补零之后的

信息码用模二除法（非二进制除法）除以G(X)对应的2进制码，注意除法过程中所用的减法是模2减法（注意是高位对齐），即没有借位的减法，也就是异或运算。


（4）当被除数逐位除完时，得到比除数少一位的余数。此余数即为冗余位,将其添加在信息位后便构成CRC码字。


例如，假设信息码字为11100011，生成多项式G(X)=X5+X4+X+1，计算CRC码字。G(X) = X5+X4+X+1,也就是110011，因为最高次是5，所以，在信息码字后补5个0，

变为1110001100000。用1110001100000模二除法除以110011，余数为11010，即为所求的冗余位。因此发送出去的CRC码字为原始码字11100011末尾加上冗余位11010，

即 1110001111010。接收端收到码字后，采用同样的方法验证，即将收到的码字用模二除法除以110011（是G(X)对应的二进制生成码），发现余数是0，则认为码字

在传输过程中没有出错。尽管在错误检测中非常有用，CRC并不能可靠地校验数据完整性（即数据没有发生任何变化），这是因为CRC多项式是线性结构，

可以非常容易地故意改变量据而维持CRC不变。



2、海明码：


Hamming codes can detect up to two-bit errors or correct one-bit errors without detection of uncorrected errors. By contrast, 

the simple parity code cannot correct errors, and can detect only an odd number of bits in error. Hamming codes are perfect codes, 

that is, they achieve the highest possible rate for codes with their block length and minimum distance of thre.


 海明码（也叫汉明码）具有一位纠错能力。

（1）确定校验码的位数x:

　　设数据有n位，校验码有x位。则校验码一共有2^x种取值方式。其中需要一种取值方式表示数据正确，剩下2^x-1种取值方式表示有一位数据出错。
  
 因为编码后的二进制串有n+x位，因此x应该满足:2^x-1 ≥　n+x;使不等式成立的x的最小值就是校验码的位数。

(2)确定校验码位置:

    海明码的校验码的位置必须是在2^n位置（n从0 开始，分别代表从左边数起分别是第1、2、4、8、16……），信息码也就是在非2^n位置
    
举例说明：


信息字码组 : 1101 ， 这时候信息位 k = 4 , 根据 k + r <= 2^r – 1 ，得出 r = 3 , 用P1、P2、P3来表示这3位校验码，和信息码组成如下：

H1 H2 H3 H4 H5 H6 H7

P1 P2 1  P3 1  0  1

如果位数更多的话也是一样的，校验位就是在 1、2、4、8、16…….这些位置上。


(3)计算校验位 Pi


根据海明码定义，是通过将信息进行分组，才得以实现检错和纠错的能力，就像一开始的图，每一个Pi都会包含3个信息位。

比如说信息 1 1 0 1 ，从上面我们可以看出，被分别安排在 H3,H5,H6,H7的位。

则：H3 = H1+H2 （这里是等式右边下标相加等于等式左边下标的意思,下面一样）

H5 = H1+H4

H6 = H2 + H4

H7 = H1 + H2 + H4

通过上面的关系式，我们可以看出，右边在海明码中的数位，正好都是校验码的位置，下面来正式求校验码了。

P1（H1） = H3 ⊕ H5 ⊕ H7 （⊕表示异或：相同 = 0 ，不同 = 1）

P2（H2） = H3 ⊕ H6 ⊕ H7

P3（H4） = H5 ⊕ H6 ⊕ H7

信息码：1101 对应海明位 H3、H5、H6、H7，不要把海明码，校验位，信息位搞混了哦！

P1 = 1 ⊕ 1 ⊕ 1 = 1；

P2 = 1 ⊕ 0 ⊕ 1 = 0；

P3 = 1 ⊕ 0 ⊕ 1 = 0；

所以：P1 P2 1 P3 1 0 1 ==> 1010101，这就是我们最后需要得到的海明码！

(4)海明码纠错和检错：

有了上面的校验码和信息码，我们就能借用他们去知道怎么检查，信息在传送的过程中有没有发生错误，因为校验码有三位，我们这里再申明三位码分别用S1、S2、S3表示

，满足下列关系：

S1 = P1 ⊕ H3 ⊕ H5 ⊕ H7 ；

S2 = P2 ⊕ H3 ⊕ H6 ⊕ H7；

S3 = P3 ⊕ H5 ⊕ H6 ⊕ H7；

这样求出来的S1、S2、S3如果都为0就是没有出错，如果不是0就表示在海明码中出错的位置，将其取反就可以起到纠错的功能。
